name: Deploy Spring Boot to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: |
        cd hotel-service
        mvn -B package --file pom.xml
      
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
        chmod 600 ~/.ssh/ec2_key.pem
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Create application directory on EC2
      run: |
        ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "mkdir -p /home/ubuntu/hbms-backend/logs"
        
    - name: Copy JAR file to EC2
      run: |
        scp -i ~/.ssh/ec2_key.pem hotel-service/target/*.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/hbms-backend/hotel-service.jar
        
    - name: Create service file
      run: |
        cat > hotel-service.service << EOF
        [Unit]
        Description=Hotel Management Service
        After=network.target
        
        [Service]
        User=ubuntu
        WorkingDirectory=/home/ubuntu/hbms-backend
        ExecStart=/usr/bin/java -jar /home/ubuntu/hbms-backend/hotel-service.jar
        SuccessExitStatus=143
        TimeoutStopSec=10
        Restart=on-failure
        RestartSec=5
        
        [Install]
        WantedBy=multi-user.target
        EOF
        
        scp -i ~/.ssh/ec2_key.pem hotel-service.service ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/hbms-backend/
        
    - name: Deploy and start application
      run: |
        ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "
          # Stop existing application if running
          if pgrep -f hotel-service.jar > /dev/null; then
            sudo pkill -f hotel-service.jar
            sleep 5
          fi
          
          # Set up as a systemd service if not already done
          if [ ! -f /etc/systemd/system/hotel-service.service ]; then
            sudo cp /home/ubuntu/hbms-backend/hotel-service.service /etc/systemd/system/
            sudo systemctl daemon-reload
            sudo systemctl enable hotel-service.service
          fi
          
          # Start or restart the service
          sudo systemctl restart hotel-service.service
          
          # Check status
          sudo systemctl status hotel-service.service --no-pager
        "
