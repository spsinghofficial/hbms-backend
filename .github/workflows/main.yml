name: Build and Deploy Hotel Service to EC2

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt-openj9'

      # Build the Spring Boot application with Maven
      - name: Build with Maven
        run: |
          cd hotel-service  # Navigate to the folder containing your Spring Boot app
          mvn clean install -DskipTests  # Build the application (without running tests)

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Run this job after the build job

    steps:
      # Checkout the code again in the deploy job
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up SSH for connecting to EC2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Deploy the Spring Boot application to EC2
      - name: Deploy to EC2
        run: |
          # SSH into the EC2 instance and deploy the application
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} ubuntu@${{ secrets.EC2_HOST }} << EOF
            # Navigate to the directory where your application will be deployed
            cd /home/ubuntu

            # Clone the latest code from the GitHub repository (if it's not already on EC2)
            git pull origin main

            # Navigate to the folder containing the Spring Boot app
            cd hotel-service

            # Build the Spring Boot application again (or skip this if you uploaded a pre-built jar)
            mvn clean install -DskipTests

            # Run the application (adjust the jar file name if necessary)
            java -jar target/hotel-service-0.0.1-SNAPSHOT.jar  # Replace with your actual jar name
          EOF
